import numpy as np
import matplotlib.pyplot as plt

def gen_noise(batch_size):
	'''
	This function will generate samples from a uniform distribution.

	:param batch_size: batch size
	:rtype: random noise sampled from a uniform distribution 
	'''

	noise = np.random.uniform(-1, 1, size=(batch_size, 128))
	return noise

def show_generated_images(generated_images):
	'''
	This function will show 3 images in a single row, so n_images should be divisible by 3.

	:param generated_images: images generated by the generator
	'''

	n_images = len(generated_images)
	rows = int(n_images/3)
	for image_no in range(1, n_images+1):
	  plt.subplot(rows, 3, image_no)
	  plt.imshow((np.reshape(generated_images[image_no-1], (28, 28))*127.5 + 127.5), cmap='gray')
	plt.show()

def save_generated_images(generated_images, epoch):
	"""
	This function will be used to save images generated by the generator.

	:param generated_images: images generated by the generator
	:epoch: current epoch  
	"""

	n_images = len(generated_images)
	for image_no in range(1, n_images+1):
		plt.imsave('./images/{}_{}'.format(epoch, image_no), (np.reshape(generated_images[image_no-1], (28, 28))*127.5 + 127.5), format='png', cmap='gray')
